/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721Mintable,
  ERC721MintableInterface,
} from "../../../contracts/lib/ERC721Mintable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a26bcaa32b9ba2a37b5b2b760a91b815250604051806040016040528060038152602001624d544b60e81b815250816000908162000063919062000120565b50600162000072828262000120565b505050620001ec565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a657607f821691505b602082108103620000c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011b57600081815260208120601f850160051c81016020861015620000f65750805b601f850160051c820191505b81811015620001175782815560010162000102565b5050505b505050565b81516001600160401b038111156200013c576200013c6200007b565b62000154816200014d845462000091565b84620000cd565b602080601f8311600181146200018c5760008415620001735750858301515b600019600386901b1c1916600185901b17855562000117565b600085815260208120601f198616915b82811015620001bd578886015182559484019460019091019084016200019c565b5085821015620001dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113f380620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a6278421161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636a627842146101a557806370a08231146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610f84565b610256565b60405190151581526020015b60405180910390f35b61011f610267565b60405161010e9190610ff1565b61013f61013a366004611004565b6102f9565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611034565b610320565b005b61016a61017a36600461105e565b61043a565b61016a61018d36600461105e565b61046b565b61013f6101a0366004611004565b610486565b6101b86101b336600461109a565b6104e6565b60405190815260200161010e565b6101b86101d436600461109a565b610510565b61011f610596565b61016a6101ef3660046110b5565b6105a5565b61016a610202366004611107565b6105b4565b61011f610215366004611004565b6105ec565b6101026102283660046111e3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610261826105f7565b92915050565b60606000805461027690611216565b80601f01602080910402602001604051908101604052809291908181526020018280546102a290611216565b80156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b5050505050905090565b600061030482610647565b506000908152600460205260409020546001600160a01b031690565b600061032b82610486565b9050806001600160a01b0316836001600160a01b03160361039d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103b957506103b98133610228565b61042b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610394565b61043583836106a9565b505050565b6104443382610717565b6104605760405162461bcd60e51b815260040161039490611250565b610435838383610796565b610435838383604051806020016040528060008152506105b4565b6000818152600260205260408120546001600160a01b0316806102615760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610394565b60006104f160075490565b9050610501600780546001019055565b61050b82826108fa565b919050565b60006001600160a01b03821661057a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610394565b506001600160a01b031660009081526003602052604090205490565b60606001805461027690611216565b6105b0338383610a85565b5050565b6105be3383610717565b6105da5760405162461bcd60e51b815260040161039490611250565b6105e684848484610b53565b50505050565b606061026182610b86565b60006001600160e01b031982166380ac58cd60e01b148061062857506001600160e01b03198216635b5e139f60e01b145b8061026157506301ffc9a760e01b6001600160e01b0319831614610261565b6000818152600260205260409020546001600160a01b03166106a65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610394565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106de82610486565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072383610486565b9050806001600160a01b0316846001600160a01b0316148061076a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061078e5750836001600160a01b0316610783846102f9565b6001600160a01b0316145b949350505050565b826001600160a01b03166107a982610486565b6001600160a01b0316146107cf5760405162461bcd60e51b81526004016103949061129d565b6001600160a01b0382166108315760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610394565b826001600160a01b031661084482610486565b6001600160a01b03161461086a5760405162461bcd60e51b81526004016103949061129d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166109505760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610394565b6000818152600260205260409020546001600160a01b0316156109b55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610394565b6000818152600260205260409020546001600160a01b031615610a1a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610394565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b031603610ae65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610394565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b5e848484610796565b610b6a84848484610c8e565b6105e65760405162461bcd60e51b8152600401610394906112e2565b6060610b9182610647565b60008281526006602052604081208054610baa90611216565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd690611216565b8015610c235780601f10610bf857610100808354040283529160200191610c23565b820191906000526020600020905b815481529060010190602001808311610c0657829003601f168201915b505050505090506000610c4160408051602081019091526000815290565b90508051600003610c53575092915050565b815115610c85578082604051602001610c6d929190611334565b60405160208183030381529060405292505050919050565b61078e84610d8f565b60006001600160a01b0384163b15610d8457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610cd2903390899088908890600401611363565b6020604051808303816000875af1925050508015610d0d575060408051601f3d908101601f19168201909252610d0a918101906113a0565b60015b610d6a573d808015610d3b576040519150601f19603f3d011682016040523d82523d6000602084013e610d40565b606091505b508051600003610d625760405162461bcd60e51b8152600401610394906112e2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061078e565b506001949350505050565b6060610d9a82610647565b6000610db160408051602081019091526000815290565b90506000815111610dd15760405180602001604052806000815250610dfc565b80610ddb84610e03565b604051602001610dec929190611334565b6040516020818303038152906040525b9392505050565b60606000610e1083610e96565b600101905060008167ffffffffffffffff811115610e3057610e306110f1565b6040519080825280601f01601f191660200182016040528015610e5a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6457509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ed55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f01576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f1f57662386f26fc10000830492506010015b6305f5e1008310610f37576305f5e100830492506008015b6127108310610f4b57612710830492506004015b60648310610f5d576064830492506002015b600a83106102615760010192915050565b6001600160e01b0319811681146106a657600080fd5b600060208284031215610f9657600080fd5b8135610dfc81610f6e565b60005b83811015610fbc578181015183820152602001610fa4565b50506000910152565b60008151808452610fdd816020860160208601610fa1565b601f01601f19169290920160200192915050565b602081526000610dfc6020830184610fc5565b60006020828403121561101657600080fd5b5035919050565b80356001600160a01b038116811461050b57600080fd5b6000806040838503121561104757600080fd5b6110508361101d565b946020939093013593505050565b60008060006060848603121561107357600080fd5b61107c8461101d565b925061108a6020850161101d565b9150604084013590509250925092565b6000602082840312156110ac57600080fd5b610dfc8261101d565b600080604083850312156110c857600080fd5b6110d18361101d565b9150602083013580151581146110e657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561111d57600080fd5b6111268561101d565b93506111346020860161101d565b925060408501359150606085013567ffffffffffffffff8082111561115857600080fd5b818701915087601f83011261116c57600080fd5b81358181111561117e5761117e6110f1565b604051601f8201601f19908116603f011681019083821181831017156111a6576111a66110f1565b816040528281528a60208487010111156111bf57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156111f657600080fd5b6111ff8361101d565b915061120d6020840161101d565b90509250929050565b600181811c9082168061122a57607f821691505b60208210810361124a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611346818460208801610fa1565b83519083019061135a818360208801610fa1565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061139690830184610fc5565b9695505050505050565b6000602082840312156113b257600080fd5b8151610dfc81610f6e56fea2646970667358221220818c4da4dd14633f401fa9a9fa0b312ed5d1f9fbcd3af8a5eda31679f0c0384b64736f6c63430008110033";

type ERC721MintableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MintableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mintable__factory extends ContractFactory {
  constructor(...args: ERC721MintableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC721Mintable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Mintable__factory {
    return super.connect(runner) as ERC721Mintable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MintableInterface {
    return new Interface(_abi) as ERC721MintableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721Mintable {
    return new Contract(address, _abi, runner) as unknown as ERC721Mintable;
  }
}
